name: Coverage checks

on:
  # Trigger the workflow on push
  push:
    # Selected branches
    branches: [master, develop, '**']
  # Trigger the workflow on pull request
  pull_request:
    branches: ['**']
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Allow only one concurrent workflow, skipping runs queued between the run
# in-progress and latest queued. And cancel in-progress runs.
concurrency:
  group:
    ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  docstring-coverage:
    runs-on: ubuntu-latest

    steps:
      - name: Check-out repository
        uses: actions/checkout@v5

      - name: Set up pixi
        uses: prefix-dev/setup-pixi@v0.9.0
        with:
          environments: >-
            py313-dev
          activate-environment: py313-dev
          run-install: true
          frozen: true
          cache: false
          post-cleanup: false

      - name: Run docstring coverage
        run: pixi run docstring-coverage

  unit-tests-coverage:
    runs-on: ubuntu-latest

    steps:
      - name: Check-out repository
        uses: actions/checkout@v5

      - name: Set up pixi
        uses: prefix-dev/setup-pixi@v0.9.0
        with:
          environments: >-
            py313-dev
          activate-environment: py313-dev
          run-install: true
          frozen: true
          cache: false
          post-cleanup: false

      - name: Run unit tests with coverage
        run: pixi run unit-tests-coverage --cov-report=xml:coverage-unit.xml

      - name: Upload unit coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          name: unit-tests-job
          flags: unittests
          files: ./coverage-unit.xml
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}

  func-tests-coverage:
    runs-on: ubuntu-latest

    steps:
      - name: Check-out repository
        uses: actions/checkout@v5

      - name: Set up pixi
        uses: prefix-dev/setup-pixi@v0.9.0
        with:
          environments: >-
            py313-dev
          activate-environment: py313-dev
          run-install: true
          frozen: true
          cache: false
          post-cleanup: false

      - name: Run functional tests with coverage
        run: pixi run func-tests-coverage --cov-report=xml:coverage-func.xml

      - name: Upload functional coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          name: func-tests-job
          flags: functional
          files: ./coverage-func.xml
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}